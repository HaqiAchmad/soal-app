#include <iostream>
#include "namespace\\getValues.h"
#include "namespace\\decor.h"
#include "namespace\\funct.h"
#include "namespace\\files.h"

using namespace std;
using namespace decor;
using namespace getValues;
using namespace funct;
using namespace files;

int main(){

     writeText("Created by : ", 12, 150, 23, 10);  randC("Achmad Baihaqi X Kelas Terbuka", 36, 10, 150, 15);//36,10,150,15);
     system("cls");

     string choose; loop:
     gotoxy(29,11);textcolor(10);
     cout <<"Start Program y/n ? =  "; textcolor(9);
     cin >> choose;

     system("cls");
     if (choose == "y" || choose == "Y"){
        getLoginType();

     }else if (choose == "n" || choose == "N" || choose == "out"){
          appClose();
          return 0;
     }else if (choose == "read.data" || choose == "##"){
        readDataUser();
        system("cls");
        goto loop;

     }else if (choose == "read.acc" || choose == "#!"){
        readUserAccount(); //ok
        system("cls");
        goto loop;
     }


     Restart_application:

     cout <<" \n"<<endl;textcolor(15);
     cout <<"Loading  "; loading(0,69,13,12);
     question_back:
     UserData();

     string Soal,j1,j2,j3,j4,j5;
     array <char, 10> AnswrTrue;
     array <char, 10> JwbUser;

    system("cls");
    if (setKelas() == "X (sepuluh)" && setJurusan() == "Rekayasa Perangkat Lunak"){
        AnswrTrue = {'a','e','c','a','b','a','d','d','e','a'};

        Soal = "Data yang berisi sederet karakter disebut...";
        j1 = "String"; j2 = "Array"; j3 = "Integer"; j4 = "Boolean"; j5 = "Float";
        printQuest(1, Soal, j1,j2,j3,j4,j5, JwbUser[0]);

       Soal = "Pointer digunakan untuk menyimpan ...";
       j1 = "Bilangan bulat"; j2 = "Karakter"; j3 = "Variabel";
       j4 = "Memory"; j5 = "Alamat memory";
       printQuest(2, Soal, j1,j2,j3,j4,j5, JwbUser[1]);

       Soal ="Operator referensi biasa disebut juga sebagai...";
       j1 = "Pointer"; j2 = "Nilai"; j3 = "Operator alamat"; j4 = "Memory"; j5 = "Variabel";
       printQuest(3 , Soal, j1,j2,j3,j4,j5, JwbUser[2]);

       Soal = "Operator referensi dilambangkan dengan...";
       j1 = "&"; j2 = "*"; j3 = "%"; j4 = ";"; j5 = "=";
       printQuest(4 ,Soal, j1,j2,j3,j4,j5, JwbUser[3]);

        Soal = "Yang di maksud dengan assignment operator adalah...";
       j1 = "Penjumblahan"; j2 = "Pemberi nilai"; j3 = "Ekspresi pemrograman"; j4 = "Notasi editor"; j5 = "Variabel";
       printQuest(5 ,Soal, j1,j2,j3,j4,j5, JwbUser[4]);

        Soal = "Membalik urutan pada string disebut...";
       j1 = "strrev"; j2 = "Sterlen"; j3 = "Strcat"; j4 = "strlwr"; j5 = "stripr";
       printQuest(6 ,Soal, j1,j2,j3,j4,j5, JwbUser[5]);

         Soal = "Menghitung panjang string dapat dilakukan dengan menggunakan fungsi...";
       j1 = "Compare"; j2 = "equals"; j3 = "append"; j4 = "Length"; j5 = "Merubahnya ke char array";
       printQuest(7 ,Soal, j1,j2,j3,j4,j5, JwbUser[6]);

        Soal = "Funsi dari index pada array yaitu....";
       j1 = "Menunjukan letak atau posisi dari elemwn array"; j2 = "Menggabungkan Nilai dan data dalam suatu program";
       j3 = "Momofikasi tampilan agar terlihat sederhana"; j4 = "Memberika nilai awal terhadap suatu variabel";
       j5 = "Mengolongkan semua variabel yang sama";
       printQuest(8 ,Soal, j1,j2,j3,j4,j5, JwbUser[7]);

        Soal = "Penanganan error dengan throws diletakkan di...";
       j1 = "Di dalam class"; j2 = "Di dalam method"; j3 = "Diluar method"; j4 = "Pendeklarasian class"; j5 = "pendeklarasian method";
       printQuest(9 ,Soal, j1,j2,j3,j4,j5, JwbUser[8]);

        Soal = "Untuk mengurutkan array kita memggunakan sort yang terdapat pada package...";
       j1 = "java.util.Arrays"; j2 = "java.lang.StringBuilder"; j3 = "java.io.Exception"; j4 = "java.util.Scanner"; j5 = "java.io.FileInputStream";
       printQuest(10 ,Soal, j1,j2,j3,j4,j5, JwbUser[9]);

       printUserValue(JwbUser,AnswrTrue);
       writeDataUser();
       printDataSiswa();

       goto Restart_application;

    }else {

    teksJalan_kanan("Untuk saat ini hanya tersedia kelas x jurusan rpl saja!!",79, 14, 10 , 14, 250);
    gotoxy(3,20); system("pause");
    goto question_back;
    }


cin.get();
return 0;
}

//namespace getValue

#include <iostream>

namespace getValues{

using namespace std;

    string setemail, setname, setpassword;
    string setnis, setkelas, setjurusan, setstatus;
    int setnilai;
    char setval_abj;

    /*
    get = mendapatkan value dari variabel lain
    set = berisi value dari variabel yang diambil dari fungsi get
    */

    void getEmail(string Email){
        setemail = Email;
    }
    void getName(string name){
        setname = name;
    }
    void getPassword(string pass){
        setpassword = pass;
    }
    void getNis(string nis){
        setnis = nis;
    }
    void getKelas(string kelas){
        setkelas = kelas;
    }
    void getJurusan(string jurusan){
        setjurusan = jurusan;
    }
    void getVal(int value){
        setnilai = value;
    }
    void getVal_abj(char chr){
        setval_abj = chr;
    }
    void getStatus(string status){
        setstatus = status;
    }


    string setEmail(){
        return setemail;
    }
    string setName(){
        return setname;
    }
    string setPassword(){
        return setpassword;
    }
    string setNis(){
        return setnis;
    }
    string setKelas(){
        return setkelas;
    }
    string setJurusan(){
        return setjurusan;
    }
    int setVal(){
        return setnilai;
    }
    char setVal_abj(){
        return setval_abj;
    }
    string setStatus(){
        return setstatus;
    }

}

// namespace decor

#include <iostream>
#include <stdlib.h>
#include <windows.h>
#include <string>
#include <mmsystem.h>
#include <bits/stdc++.h>
#include <conio.h>
#include <fstream>
#include <chrono>


namespace decor{

    using namespace std;
void gotoxy(int x, int y){
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}
void textcolor(int ForgC) {
     WORD wColor;

      HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
      CONSOLE_SCREEN_BUFFER_INFO csbi;

     if(GetConsoleScreenBufferInfo(hStdOut, &csbi)){
          wColor = (csbi.wAttributes & 0xF0) + (ForgC & 0x0F);
          SetConsoleTextAttribute(hStdOut, wColor);
     }
     return;
 }
void Sound(int a){
    ///   ADD -lwinmm  in linker
    switch(a){
case 1 :
   PlaySound(TEXT("Database\\Sound\\Login.wav"),NULL,SND_SYNC);
    break;
case 2:
    PlaySound(TEXT("Database\\Sound\\Logout.wav"),NULL,SND_SYNC);
    break;
case 3:
    PlaySound(TEXT("Database\\Sound\\Success.wav"),NULL,SND_SYNC);
    break;
case 4:
    PlaySound(TEXT("Database\\Sound\\notify.wav"),NULL,SND_SYNC);
    break;
case 5:
    PlaySound(TEXT("Database\\Sound\\Next.wav"),NULL,SND_SYNC);
    break;
case 6:
    PlaySound(TEXT("Database\\Sound\\Denied.wav"),NULL,SND_SYNC);
    break;
case 7:
    PlaySound(TEXT("Database\\Sound\\Exit.wav"),NULL,SND_SYNC);
    break;
case 8:
    PlaySound(TEXT("Database\\Sound\\Error.wav"),NULL,SND_SYNC);
    break;
    }
}

void randC (string randStr,int horizl, int vertkl,int lama,int akhir){

     time_t t = time(NULL);
    tm* timePtr = localtime(&t);

    for (int i = 0; i <= akhir; i++){

  int toValue = timePtr->tm_sec;
  int RandClr = 1 + (rand() & 14);
  int VarClr = 1 + (rand() & 14);

     textcolor(RandClr+VarClr);
      gotoxy(horizl,vertkl);  cout << randStr <<endl;
        Sleep(lama);
    textcolor(15);
  }
}
void writeText (string Text,int clrTxt, int sleepTxt, int horzntl, int vrtkl){
    int length = Text.length();
    char Teksch[length];
strcpy(Teksch, Text.c_str());
    textcolor(clrTxt);
        gotoxy(horzntl,vrtkl);
    for (int i = 0; i < length; i++){
        cout << Teksch[i];
            Sleep(sleepTxt);
    }
    textcolor(15);
}
void teksJalan_kanan (string NameStr,int beginLoc, int endLoc, int Nl_vertikal,int colorTxt,int speedJLN){
int Mulai = beginLoc - NameStr.length(); // Mengambil posisi paling kanan
    for (int i = Mulai; i >= endLoc; i--){
             textcolor(colorTxt);
        gotoxy(i,Nl_vertikal); cout << NameStr <<" "<<endl;
    Sleep(speedJLN);
    }

textcolor(15);
}
void teksJalan_kiri (string NameStr,int beginLoc,int endLoc, int Nl_vertikal,int colorTxt,int speedJLN){
    int Mulai = beginLoc;
        for (int j = Mulai; j < endLoc; j++){
               // system("cls");
            textcolor(colorTxt);
            gotoxy(j,Nl_vertikal);
                cout <<" "<< NameStr <<endl;
                Sleep(speedJLN);
        }
        textcolor(15);

}


void showRules(int horizontal, int vertikal, array<string, 3> &rules, string errMessage){

    gotoxy(horizontal, vertikal);
    textcolor(9);
    cout <<"_______________________________________________________________________________"<<endl <<endl <<endl;
      for (int i = 0; i < 3; i++){
        textcolor(8);
          cout << " - ";
        textcolor(15);
          cout << rules[i];

      }
      textcolor(9);
      cout <<"_______________________________________________________________________________"<<endl;
      textcolor(15);
      cout <<"Message : "; textcolor(12);
      cout << errMessage <<endl;


}

void loading (int aw,int akr,int color, int Delay){
    for (;aw <= akr;aw++){
        textcolor(color);
            cout <<"=";
            Sleep(Delay);
    }
    textcolor(15);
}
void loadingGotoxy(int horizontal, int vertikal, int color, int delay, char pil){

    if (pil == '+'){
        gotoxy(horizontal, vertikal);
        for (int i = 0; i <= 79; i++){
            textcolor(color);
        cout <<'=';
        Sleep(delay);
        }
    }else if (pil == '-'){
        for (int i = horizontal; i >= 0; i--){
            gotoxy(i, vertikal);
            textcolor(color);
            cout <<'=';
            Sleep(delay);
        }
    }



}


}


// namespace files


#include <stdlib.h>
#include <windows.h>
#include <string>
#include <mmsystem.h>
#include <bits/stdc++.h>
#include <conio.h>
#include <fstream>
#include <chrono>

namespace files{
    using namespace std;
    using namespace getValues;
    using namespace decor;

    time_t t = time(NULL);
    tm* timePtr = localtime(&t);

void addAccount(){

    bool Login = true, isPassword = false;
    string Nama ="", Email="", Password="", KonPassword="";
    string errName="null", errEmail="null", errPassword="null", findEmail="";

    array <string, 3> rulesName {"Nama harus >= 4 character\n",  "Anda bisa menggunakan nama pendek ataupun nama panjang\n", "Dilarang mengunakan nama yang mengundang kebencian\n"};
    //array <string, 3> rulesEmail {""};
    array <string,  3> rulesPassword {"Password harus >= 6 character", "Gunakan gabungan angka, huruf kecil dan besar\n", "Jangan gunakan identitas atau informasi terkait anda sebagai password"};

    fstream addAcc;
    addAcc.open("C:\\MinGW\\codeblock\\Soal APP\\Database\\user\\UserAccount.txt", ios:: app | ios::in | ios::out);

    

    changeName:
        system("cls"); decor::textcolor(15);


     decor::showRules(0, 8, rulesName, errName);


    //user memasukan nama
    cin.ignore(numeric_limits<streamsize>::max(),'\n');
    decor::gotoxy(0,2);
    decor::textcolor(15);
    cout <<"Masukan nama anda  : "; decor::textcolor(8);
        getline(cin ,Nama);
        getName(Nama); // untuk mendapatkan nilai dari variabel nama

            // jika nama kurang <= 4 character maka nama tidak valid
            if (Nama.length() <= 2){
                errName = "Nama terlalu pendek!!";
                goto changeName;
            }

    // opsi untuk mengubah nama atau lanjut
    decor::textcolor(11);
    cout <<" "<< endl <<Nama ;
    decor::textcolor(12);
    cout <<" akan selalu di gunakan dalam program!"<<endl;

    decor::textcolor(14);
    char pil;
    cout <<"ingin mengantinya(y/n) ";
    decor::textcolor(15);
         cin >> pil;


    if (pil == 'y' || pil == 'Y'){
        errName = "";
        goto changeName;
    }else if (pil == 'n' || pil == 'N'){

    }else{
        goto changeName;
    }


    while (Login == true){

        system("cls");

        Terdaftar:
        notEmail:
        cout << errEmail <<endl;
        cout << "Masukan Email anda : ";
            cin >> Email;
        getEmail(Email); // mendapatkan value dari variabel Email

        if (Email == "haki"){
            isPassword = true;
            break;
        }else{
            goto notEmail;
        }

    } // end while Login

    // mengecek apakah file sudah terdaftar atau belum
        while(!addAcc.eof()){

            getline(addAcc, findEmail);
            if (findEmail == Email){
                errEmail = Email.append(" sudah terdaftar, Silahkan daftar dengan akun yang lain!");
                goto Terdaftar;
            }

        }

    while(isPassword == true){

       decor::gotoxy(0,2);
       decor::textcolor(15);
       cout <<"Masukan email anda : "; decor::textcolor(8); cout << Email <<endl;
       decor::textcolor(15);
       cout <<"Masukan password   : "; decor::textcolor(8);
            getline(cin, Password);
                if (Password.length() < 6){


                }
        decor::textcolor(15);
        cout <<"Kofirmasi password : "; decor::textcolor(8);
            getline(cin, KonPassword);
                if (Password != KonPassword){


                }


    }    


        addAcc << Nama.append("\n");
        addAcc << Email.append("\n");
        addAcc << Password.append("\n");

}

void loginUserAccount(){
    string inputUser, pass, fnName, fnAcc, fnPass, buffer, errMsg;
    ifstream files;
    files.open("C:\\MinGW\\codeblock\\Soal APP\\Database\\user\\UserAccount.txt");
    bool isFind = false, isBlock;
    int chance = 5;

   notFound:
   system("cls"); decor::textcolor(15);
   decor::textcolor(15); cout << errMsg <<endl;
    cout <<"\nMasukan Email Anda : "; decor::textcolor(8);
      cin >> inputUser;

   while (!files.eof()){

    getline(files, buffer);
        fnName = buffer;
    getline(files, buffer);
        fnAcc = buffer;
    getline(files, buffer);
        fnPass = buffer;
    getName(fnName);

        if (fnAcc == inputUser){ // jika akun di temukan maka bool isFind akan true
            isFind = true;
            break;
        }
   }
    getEmail(inputUser); // mendapatkan value dari variabel inputUser

    if (isFind == true){

        // action jika bool isFind bernilai true
        system("cls");
        decor::textcolor(12); cout << fnAcc <<" ditemukan!!!"<<endl;
        cin.ignore(numeric_limits<streamsize>::max(),'\n');

        while(chance >= 1){
        system("cls");
        decor::textcolor(15); cout << isFind <<"Masukan Email Anda : "; decor::textcolor(8); cout << fnAcc; decor::textcolor(11); cout <<" "<< chance <<" kesempatan lagi!"<<endl;
        decor::textcolor(15); cout <<"Masukan Password   : ";
            getline(cin, pass);

            if (pass == fnPass){
                isBlock = false;
                break;
            }else {
                isBlock = true;
            }
            chance-=1;
        }
    }else if (isFind == false){
        errMsg = inputUser+" belum terdaftar\n Silahkan cek akun anda kembali \n Jika anda belum mempunyai akun silahkan ketik out pada console";
        //goto notFound;
    }

    if (isBlock == false){
        cout <<"Login Success"<<endl;
    }else if (isBlock != false){
        cout <<fnAcc <<" terblokir"<<endl;

    }

}

void getLoginType(){

    ifstream kata; kata.open("Database\\teks\\motivasi\\motivasi.txt");

    char choose; string ucapan;
    int Jam = timePtr->tm_hour; // <-- mendapatkan waktu di komputer
    int sec;
    string Motivasi="", spasi = "-             ";

    notFound: // goto : jika input dari user tidak ditemukan

    sec = timePtr->tm_sec + 1;
    for (int q = 0; q <= sec; q++){
        getline(kata, Motivasi);
    }


    // mendeteksi waktu apakah pagi, siang, sore, petang atau malam
    if (Jam <= 9 && Jam >= 5){ // pagi dimulai jam 5 sampai 9
        ucapan = "Selamat Pagi";
    }else if (Jam <= 14 && Jam >= 10){ // siang dimulai jam 10 sampai 14
        ucapan = "Selamat Siang";
    }else if (Jam <= 17 && Jam >= 15){ // sore dimulai jam 15 sampai 17
        ucapan = "Selamat Sore";
    }else if (Jam <= 19 && Jam >= 18){ // petang dimulai jam 18 sampai 19
        ucapan = "Selamat Petang";
    }else if (Jam <= 23 && Jam >= 20){ // malam dimulai jam 20 sampai 23
        ucapan = "Selamat Malam";
    }else if (Jam <= 4 && Jam >= 0){ // malam dimulai jam 0 sampai 4
        ucapan = "Selamat Malam";
    }


    decor::loadingGotoxy(0, 2, 9, 1, '+'); // menampilkan efek garis di gotoxy(0,3); (bagian atas console)
    decor::loadingGotoxy(79, 22, 9, 1, '-'); // menampilkan efek garis di gotoxy(0,22); (bagian bawah console)

    // menambahkan spasi di tengah" kata (agar tampilan lebih cantik saat di tampilkan di console)
    if (Motivasi.length() >= 66){
        Motivasi.insert(66, spasi);
    }
    if (Motivasi.length() >= 147){
        Motivasi.insert(147, spasi);
    }
    if (Motivasi.length() >= 224){
        Motivasi.insert(224, spasi);
    }
    if (Motivasi.length() >= 303){
        Motivasi.insert(303, spasi);
    }

    // menampilkan ucapan Selamat Pagi/Siang/Sore/Petang/Malam di gotoxy (33,4) dengan color light green
    decor::gotoxy(33,4); decor::textcolor(10);
    cout << ucapan <<endl;

    // menampilkan value variabel Motivasi di gotoxy(1,15);
    decor::gotoxy(3,15); decor::textcolor(15);
    cout << sec <<"Note : "; decor::textcolor(8); cout << Motivasi <<endl;

    // menapilkan pilihan menu Created account di gotoxy(3,9);
    decor::gotoxy(3, 9); decor::textcolor(10);
    cout <<">>"; decor::textcolor(15); cout <<" 1. ";decor::textcolor(12); cout <<"Created account!"<<endl;
    // menampilkan pilihan menu Have a account already? di gotoxy(3,10);
    decor::gotoxy(3, 10); decor::textcolor(10);
    cout <<">>"; decor::textcolor(15); cout <<" 2. ";decor::textcolor(12); cout <<"Have a account already?"<<endl;
    // menampilkan Input Code[1/2]? : di gotoxy (3,14) dengan color light yellow
    decor::gotoxy(3, 12); decor::textcolor(14);
    cout <<"Input code[1/2]? ";
    decor::textcolor(15); cout <<"-> "; decor::gotoxy(24,12); cout <<" <-" <<endl; // membuat efek anak panah
    // mendapatkan input dari user
    decor::textcolor(11); decor::gotoxy(23, 12);
    cin >> choose;

        if (choose == '1'){
            addAccount(); // menambahkan akun
        }else if (choose == '2'){
            loginUserAccount(); // Log in dengan akun yang sudah ada
        }else {
            system("cls");
            sec = 0; // mereset detik
            goto notFound; // jika pilihan tidak ditemukan maka akan dilempar ke atas lagi
        }



}

void readDataUser(){
    ifstream dataUser;
    dataUser.open("C:\\MinGW\\codeblock\\Soal APP\\Database\\user\\DataStatusUser.txt",ios::in);
    string data="",buffer;

    system("cls"); decor::textcolor(8);
    while(!dataUser.eof()){
            getline(dataUser,data);
                cout << data <<endl;
    }
    system("pause");
      decor::textcolor(9);
}

void readUserAccount(){

   ifstream dataUser;
    dataUser.open("C:\\MinGW\\codeblock\\Soal APP\\Database\\user\\UserAccount.txt",ios::in);
    string buffer;

    system("cls"); decor::textcolor(8);
    while(!dataUser.eof()){
            getline(dataUser, buffer);
                cout <<"Username : "<< buffer <<endl;
            getline(dataUser, buffer);
                cout <<"Email    : "<< buffer <<endl;
            getline(dataUser, buffer);
                cout <<"Password : "<< buffer <<endl<<endl;
    }
    system("pause");
      decor::textcolor(9);
}

 void writeDataUser(){

    ofstream DataUser; DataUser.open("C:\\MinGW\\codeblock\\Soal APP\\Database\\user\\DataStatusUser.txt",ios::app);

    time_t t = time(NULL);
    tm* timePtr = localtime(&t);

            system("cls");
    int Hrs = timePtr->tm_hour, Min = timePtr->tm_min;
    int day = timePtr->tm_wday, nowDay = timePtr->tm_mday;
    int month = timePtr->tm_mon+1, year = timePtr->tm_year+1900;

    string nmDay = "";
   switch(day){
        case 1:
            nmDay = "Sen, ";
            break;
        case 2:
            nmDay = "Sel, ";
            break;
        case 3:
            nmDay = "Rab, ";
            break;
        case 4:
            nmDay = "Kam, ";
            break;
        case 5:
            nmDay = "Jum, ";
            break;
        case 6:
            nmDay = "Sab, ";
            break;
        case 0:
            nmDay = "Min, ";
            break;
       }

    string line = "\n";
    /// convert int to string
    stringstream hrs, mnt, nwdy, mon, yrs;
    hrs << Hrs; mnt << Min; nwdy << nowDay; mon << month; yrs << year;

    string jam = hrs.str(), menit = mnt.str(), harini = nwdy.str(), bulan = mon.str(), tahun = yrs.str();

    DataUser <<"Email    : "; DataUser << setEmail().append("\n");
    DataUser <<"Username : "; DataUser << setName().append("\n");
    DataUser <<"Nis      : "; DataUser << setNis().append("\n");
    DataUser <<"Kelas    : "; DataUser << setKelas().append("\n");
    DataUser <<"Jurusan  : "; DataUser << setJurusan().append("\n");
    DataUser <<"Nilai    : "; DataUser << setVal()*10;
    DataUser <<"\nStatus   : "; DataUser << setStatus().append("\n");
    DataUser <<"Login Time : "; DataUser << jam.append(":"+menit+" ");
    DataUser << nmDay.append(harini+":"+bulan+":"+tahun+"\n\n");

    }

}


// namespace fucnt

#include <iostream>
#include <stdlib.h>
#include <windows.h>
#include <string>
#include <mmsystem.h>
#include <bits/stdc++.h>
#include <conio.h>
#include <fstream>
#include <chrono>

using namespace getValues;

namespace funct{
    using namespace std;
    using namespace decor;

void printQuest(int numQs, string Quest, string jwb1, string jwb2, string jwb3, string jwb4, string jwb5, char &UserJwb){
char jwbUser;

if (numQs == 1){
textcolor(8);
cout <<"Jawablah Pertanyaan Dibawah Ini Denan Baik Dan Jujur!!!"<<endl<<endl;
}

textcolor(15);
cout << numQs <<". "<< Quest<<endl<<endl;
cout <<"   a. "<< jwb1 <<endl;
cout <<"   b. "<< jwb2 <<endl;
cout <<"   c. "<< jwb3 <<endl;
cout <<"   d. "<< jwb4 <<endl;
cout <<"   e. "<< jwb5 <<endl<<endl;
textcolor(12);cout <<"Pilih Jawaban : "; textcolor(8);
    cin >> jwbUser; cout <<endl;
    Sound(5);
    loading(0,79,10,8);
    cout <<endl;

        UserJwb = jwbUser;

    if (numQs == 10){
loading(0,79,9,20);
    textcolor(8); cout <<"                              CONGRATULATION "<<endl;
loading(0,79,9,20);
}

}
void printUserValue (array <char, 10> &Data, array <char, 10> &Correct){

    int N_Angka;
    char N_Abjad;
    string Status;

    textcolor(15); cout <<"Jawaban anda :"<<endl<<endl;
    textcolor(10); cout <<"Green"; textcolor(15); cout <<"(Benar)"<<endl;
    textcolor(12); cout <<"Red"; textcolor(15); cout <<"(Salah)"<<endl<<endl;
        // Menghitung jawaban dari user
    char a,b; int tru,fls; tru = 0; fls = 0;
    for (int i = 0; i < Data.size(); i++){
         textcolor(0); Data[i] = putchar(tolower(Data[i])); // merubah jwban user ke lower case
        a = Data[i]; // Data = Jawaban dari user
        b = Correct[i]; // Correct = Jawaban yang benar
    // Menampilkan jawaban user
            if (a == b){
                textcolor(15);
                    cout <<"  "<< i+1 <<".";
                textcolor(10);
                cout << Data[i] <<endl;
                    tru = tru+1;
            }else {
                textcolor(15);
                    cout <<"  "<< i+1 <<".";
                textcolor(12);
                cout << Data[i] <<endl;
                    fls = fls+1;
            }
            Sleep(200);
    }
    cout <<" "<<endl;
    textcolor(15); cout <<"Benar : "; textcolor(10); cout << tru <<endl; N_Angka = tru;
    textcolor(15); cout <<"Salah : "; textcolor(12); cout << fls <<endl<<endl<<endl;
    system("pause");
    textcolor(15);
    //Merubah ke nilai abjad
            int Val = tru;
                            if(Val <= 10 && Val >= 9){
                                N_Abjad = 'A';
                                Status = "LULUS";
                            }else if(Val <= 8  && Val >= 7){
                                N_Abjad = 'B';
                                Status = "LULUS";
                            }else if(Val <= 6  && Val >= 4){
                                N_Abjad = 'C';
                                Status = "TIDAK LULUS";
                            }else if (Val <= 3 && Val >= 0){
                               N_Abjad = 'D';
                               Status = "TIDAK LULUS";
                            }
     getVal(N_Angka);
     getVal_abj(N_Abjad);
     getStatus(Status);
}
void UserData (){

string User, Nis, Kelas, Jrusan;
bool data = true;
string us,nis,kls,jrsan; string errKelas =" "; string errJrusan = " ";
while (data == true){
      label_continue:
          errJrusan = " "; errKelas = " ";

            system("cls");
textcolor(15);
cout <<" "<<endl<<endl;
gotoxy(30,1);cout <<"<<<<<<Welcome>>>>>>"<<endl<<endl<<endl;textcolor(12);
cout <<"ISI Data berikut dengan benar!!!"<<endl<<endl;textcolor(15);
textcolor(10);cout <<"Masukan Nama Anda = ";textcolor(15); cout << setName() <<endl;
User = us;  Sound(3);
textcolor(10);cout <<"Masukan Nis       = ";textcolor(15);
cin >> nis;  Nis = nis;
Sound(3);
gKelas:
textcolor(10);cout <<"\nMasukan Kelas     : "; textcolor(12); cout<<"   "<< errKelas <<endl; textcolor(15);
cout <<"\n  1. X (sepuluh)"<<endl;
cout <<"  2. XI (sebelas)"<<endl;
cout <<"  3. XII (duabelas) \n"<<endl;
textcolor(14);cout <<"Kelas [1-3] = ";textcolor(15);
cin >>kls;  Sound(3);
gJurusan:
textcolor(10);cout <<"\nPilih Jurusan: "; textcolor(12); cout <<"    "<< errJrusan <<endl<<endl; textcolor(15);
cout <<"  1. Teknik Pemesinan \n";
cout <<"  2. Teknik Instalasi Tenaga Listrik \n";
cout <<"  3. Otomasi Industri \n";
cout <<"  4. Tata Boga \n";
cout <<"  5. Tata Busana \n";
cout <<"  6. Rekayasa Perangkat Lunak "<<endl<<endl;textcolor(14);
cout <<"Pilih[1-6] = ";textcolor(15);
cin >> jrsan;

if (jrsan == "1" || jrsan == "2" || jrsan == "3" || jrsan == "4" || jrsan == "5" || jrsan == "6"){
        data = false;
        Sound(3);
       }else {
            Sound(8); errJrusan = "Jurusan tidak terdatar? Masukan lagi!!!";
            system("cls");
            goto gJurusan;
       }

if (kls == "x" || kls == "X" || kls == "10" || kls == "1"){
        Kelas = "X (sepuluh)";
            data = false;
        }else if (kls == "xi" || kls == "XI" || kls == "11" || kls == "2"){
           Kelas = "XI (sebelas)";
                data = false;
        }else if (kls == "xii" || kls == "XII" || kls == "12" || kls == "3"){
            Kelas = "XII (duabelas)";
            data = false;
        }
        else{
                Sound(8);
                errKelas = "Kelas tidak terdaftar? Cek lagi!!";
                system("cls");
            goto gKelas;
        }


 string jrs = jrsan;
        //string nmjrsn;
            if (jrs == "1"){
                Jrusan = "Teknik Pemesinan";
            }else if (jrs == "2"){
                Jrusan = "Teknik Instalasi Tenaga Listrik";
            }else if (jrs == "3"){
                Jrusan =  "Otomasi Industri";
            }else if (jrs == "4"){
                 Jrusan = "Tata Boga";
            }else if (jrs == "5"){
                 Jrusan = "Tata Busana";
            }else if (jrs == "6"){
                 Jrusan = "Rekayasa Perangkat Lunak";
            }

textcolor(15);  textcolor(9);

cout <<"\n\nSaving Data";textcolor(15);
    for(int r = 0;r <= 2;r++){
        cout<<". ";
            Sleep(1200);
    }cout <<" "<<endl<<endl<<endl;;
   loading(0,79,11,8);
   cout <<" "<<endl<<endl;textcolor(12);


    cout <<"                          Silahkan cek data anda"<<endl<<endl;textcolor(15);
    cout <<"Nama    : "<< setName() <<endl;
    cout <<"Nis     : "<< nis <<endl;    getNis(nis);
    cout <<"Kelas   : "<< Kelas <<endl;  getKelas(Kelas);
    cout <<"Jurusan : "<< Jrusan <<endl; getJurusan(Jrusan);


data = true;
          textcolor(6);  cout <<"\nEdit data y/n : ";
           textcolor(7); char pill; cin >> pill;
                if (pill == 'N' || pill == 'n'){
                    Sound(3);
                    data = false;
                }else if(pill != 'N' || pill != 'n'){
                    Sound(4);
                    goto label_continue;
                }
}//While Data

 textcolor(15);
            cout <<endl;

 loading(0,79,11,8);
}
void printDataSiswa (){
system("cls");
    textcolor(15);
    cout <<endl<<endl;
    cout <<"Nama        : " << setName() <<endl;
    cout <<"Nis         : " << setNis() <<endl;
    cout <<"Kelas       : " << setkelas <<endl;
    cout <<"Jurusan     : " << setJurusan() <<endl;
    cout <<"Nilai       : " << setVal() <<endl;
    cout <<"Nilai abjad : " << setVal_abj() <<endl;
    cout <<"Status      : " << setStatus() <<endl;

    gotoxy(2,19);system("pause"); system("cls");

}



 void appClose(){

     Sound(2); system("cls");textcolor(15);
         randC("5.2.4",33,10,300,21);
         gotoxy(25,19);cout <<endl;
            textcolor(12);
        system("pause");
        textcolor(0);

 }





}// end namaspace


